// Generated by Xata Codegen 0.29.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "courses",
    columns: [
      {
        name: "titulo",
        type: "text",
        notNull: true,
        defaultValue: "Curso de Pós Graduação",
      },
      { name: "horas-teorica", type: "text" },
      { name: "horas-pratica", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Courses = InferredTypes["courses"];
export type CoursesRecord = Courses & XataRecord;

export type DatabaseSchema = {
  courses: CoursesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://courses-ue460p.us-east-1.xata.sh/db/pos-graduacoes",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
